<Window
        x:Class="KindleManager.MainWindow"
        x:Name="Window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:KindleManager.BindingConverters"
        xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
        mc:Ignorable="d"
    
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
    
        Title="Kindle Manager"
        MinHeight="200"
        MinWidth="500">

    <Window.Resources>
        <converters:CollapseIfNull x:Key="CollapseIfNull" />
        <converters:BookInLibrary x:Key="BookInLibrary" />
        <converters:MergeLibraries x:Key="MergeLibraries" />
        <converters:FloatToString x:Key="FloatToString" />
        <converters:VisibilityToBool x:Key="VisibilityToBool" />
        <converters:GridColumnFilter x:Key="GridColumnFilter" />

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False" >
                    <Setter Property="Opacity" Value="0.5" />
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True" >
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <materialDesign:DialogHost Identifier="RootDialog">
        <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding LeftDrawerOpen}" IsBottomDrawerOpen="{Binding BottomBarOpen}" BottomDrawerCloseOnClickAway="False">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel Margin="10" Width="250" LastChildFill="False">
                    <StackPanel DockPanel.Dock="Top">
                        <TextBlock FontSize="14" FontWeight="Bold">Connected Device</TextBlock>
                        <Border BorderThickness="1" BorderBrush="{DynamicResource PrimaryHueMidBrush}" Margin="0,0,0,8"/>

                        <GroupBox Style="{DynamicResource MaterialDesignCardGroupBox}" Visibility="{Binding SelectedDevice, Converter={StaticResource CollapseIfNull}}">
                            <GroupBox.HeaderTemplate>
                                <DataTemplate>
                                    <DockPanel LastChildFill="False">
                                        <TextBlock DockPanel.Dock="Left" FontWeight="Bold" FontSize="16" VerticalAlignment="Center" Text="{Binding DataContext.SelectedDevice.Name, ElementName=Window}">
                                        </TextBlock>
                                        <Button DockPanel.Dock="Right" Command="{Binding DataContext.CloseDevice, ElementName=Window}" Style="{StaticResource MaterialDesignToolButton}" Foreground="{StaticResource PrimaryHueMidForegroundBrush}" Margin="0,2,0,0" Cursor="Hand" Height="20" Width="20">
                                            <icons:PackIconOcticons Kind="X" Height="12" Width="12"/>
                                        </Button>
                                    </DockPanel>
                                </DataTemplate>
                            </GroupBox.HeaderTemplate>
                            <Grid Grid.Row="1" VerticalAlignment="Center">
                                <Grid.Resources>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                                        <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False" >
                                                <Setter Property="Opacity" Value="0.5" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True" >
                                                <Setter Property="Cursor" Value="Hand" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                    <Style TargetType="{x:Type Menu}">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Style>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="FontSize" Value="14"/>
                                        <Setter Property="Padding" Value="0,6,0,6"/>
                                    </Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button ToolTip="Sync Library" Command="{Binding SyncDeviceLibrary}" Grid.Column="0">
                                    <icons:PackIconOcticons Kind="RepoForcePush"/>
                                </Button>
                                <Button ToolTip="Edit Device Settings" Command="{Binding EditDeviceSettings}" Grid.Column="1">
                                    <icons:PackIconOcticons Kind="Gear"/>
                                </Button>
                                <Button ToolTip="Open Library Folder" Command="{Binding OpenDeviceFolder}" Grid.Column="2">
                                    <icons:PackIconOcticons Kind="FileSymlinkDirectory"/>
                                </Button>

                                <materialDesign:PopupBox Grid.Column="3" HorizontalAlignment="Center" Foreground="{StaticResource PrimaryHueMidBrush}">
                                    <materialDesign:PopupBox.ToggleContent>
                                        <icons:PackIconOcticons Kind="KebabVertical"/>
                                    </materialDesign:PopupBox.ToggleContent>
                                    <StackPanel Orientation="Vertical">
                                        <Button Command="{Binding ReorganizeDeviceLibrary}">
                                            Reorganize Library
                                        </Button>
                                        <Button Command="{Binding ScanDeviceLibrary}">
                                            Rescan Library
                                        </Button>
                                    </StackPanel>
                                </materialDesign:PopupBox>
                            </Grid>
                        </GroupBox>
                        <TextBlock FontSize="14" FontWeight="Bold" Margin="0,8,0,0">Devices</TextBlock>
                        <Border BorderThickness="1" BorderBrush="{DynamicResource PrimaryHueMidBrush}"/>
                        <ItemsControl ItemsSource="{Binding DevManager.DeviceList}" Padding="0,8">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <materialDesign:Card Padding="8" Margin="0,4" Cursor="Hand">
                                        <materialDesign:Card.InputBindings>
                                            <MouseBinding MouseAction="LeftClick" Command="{Binding DataContext.SelectDevice, ElementName=Window}" CommandParameter="{Binding Id}"/>
                                        </materialDesign:Card.InputBindings>
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock Text="{Binding Name}" Margin="0,0,0,0" FontSize="16" FontWeight="Bold" />
                                            <TextBlock Text="{Binding Description}"/>
                                        </StackPanel>
                                    </materialDesign:Card>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                    <Button DockPanel.Dock="Bottom" Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding ShowAbout}">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <icons:PackIconOcticons Kind="Question" Margin="0,0,8,0"/>
                            <TextBlock>About KindleManager</TextBlock>
                        </StackPanel>
                    </Button>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <Grid>
                <Grid.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                        <Setter Property="Margin" Value="8,0,8,0"/>
                    </Style>
                    <Style TargetType="{x:Type icons:PackIconOcticons}">
                        <Setter Property="Margin" Value="4,0,4,0"/>
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid Height="48" Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <Button Style="{StaticResource MaterialDesignFlatButton}" Grid.Column="0" Command="{Binding ToggleLeftDrawer}" Margin="8,0">
                        <icons:PackIconOcticons Kind="ThreeBars"/>
                    </Button>
                    <Border BorderBrush="{StaticResource PrimaryHueLightBrush}" Margin="0,8,0,8" BorderThickness="1,0,0,0" Grid.Column="1"/>
                    <Button ToolTip="Import Book" Command="{Binding BrowseForImport}" Grid.Column="2">
                        <icons:PackIconOcticons Kind="RepoTemplate"/>
                    </Button>
                    <Border BorderBrush="{StaticResource PrimaryHueLightBrush}" Margin="0,8,0,8" BorderThickness="1,0,0,0" Grid.Column="3"/>
                    <Button ToolTip="Copy To Kindle" Command="{Binding SendBook}" CommandParameter="{Binding ElementName=LibraryTable, Path=SelectedItems}" Grid.Column="4">
                        <StackPanel Orientation="Horizontal">
                            <icons:PackIconOcticons Kind="RepoPush"/>
                            <TextBlock VerticalAlignment="Center">Transfer to Kindle</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button ToolTip="Edit Metadata" Command="{Binding EditMetadata}" Grid.Column="5">
                        <StackPanel Orientation="Horizontal">
                            <icons:PackIconOcticons Kind="Tag"/>
                            <TextBlock VerticalAlignment="Center">Edit metadata</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button ToolTip="Remove Book" Command="{Binding RemoveBook}" Grid.Column="6">
                        <StackPanel Orientation="Horizontal">
                            <icons:PackIconOcticons Kind="Trashcan"/>
                            <TextBlock VerticalAlignment="Center">Delete</TextBlock>
                        </StackPanel>
                    </Button>

                    <Button Grid.Column="9" ToolTip="Open Settings" Command="{Binding EditSettings}">
                        <icons:Octicons Kind="Settings"/>
                    </Button>
                </Grid>

                <DataGrid Name="LibraryTable"
                  BorderBrush="{DynamicResource MaterialDesignTextBoxBorder}"
                  BorderThickness="0,1,0,0"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  SelectedItem="{Binding SelectedTableRow}"
                  Grid.Row="1"
                  AllowDrop="True"
                  Background="{DynamicResource MaterialDesignBackground}"
                  Grid.ZIndex="1"
                  
                  Tag="{Binding DataContext}"
                  ItemsSource="{Binding CombinedLibrary}">

                    <DataGrid.Resources>
                        <ContextMenu x:Key="GridRowContextMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                            <MenuItem Header="Copy To Kindle" Click="SendBook">
                                <MenuItem.IsEnabled>
                                    <MultiBinding Converter="{StaticResource BookInLibrary}" ConverterParameter="local">
                                        <Binding/>
                                        <Binding Path="DataContext.CombinedLibrary" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}"/>
                                    </MultiBinding>
                                </MenuItem.IsEnabled>
                            </MenuItem>
                            <MenuItem Header="Copy To Library" Click="ReceiveBook">
                                <MenuItem.IsEnabled>
                                    <MultiBinding Converter="{StaticResource BookInLibrary}" ConverterParameter="remote">
                                        <Binding/>
                                        <Binding Path="DataContext.CombinedLibrary" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}"/>
                                    </MultiBinding>
                                </MenuItem.IsEnabled>
                            </MenuItem>
                            <MenuItem Header="Edit Metadata" Click="EditMetadata"/>
                            <MenuItem Header="Show In Explorer" Click="OpenBookFolder"/>
                            <MenuItem Header="Delete" Click="RemoveBook"/>
                        </ContextMenu>

                        <ContextMenu x:Key="GridHeaderContextMenu"
                                     DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"
                                     Closed="SaveLibraryColumns"
                                     ItemsSource="{Binding Columns, Converter={StaticResource GridColumnFilter}}"
                                     >
                            <ContextMenu.ItemContainerStyle>
                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MaterialDesignMenuItem}">
                                    <Setter Property="Header" Value="{Binding Header}"/>
                                    <Setter Property="IsCheckable" Value="True"/>
                                    <Setter Property="IsChecked" Value="{Binding Visibility, Converter={StaticResource VisibilityToBool}}"/>
                                </Style>
                            </ContextMenu.ItemContainerStyle>
                        </ContextMenu>

                    </DataGrid.Resources>

                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                            <Setter Property="Tag" Value="{Binding ElementName=LibraryTable}"/>
                            <Setter Property="ContextMenu" Value="{StaticResource GridHeaderContextMenu}"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>

                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                            <Setter Property="ContextMenu" Value="{StaticResource GridRowContextMenu}"/>
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell" BasedOn="{StaticResource MaterialDesignDataGridCell}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Background" Value="{StaticResource SecondaryAccentBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.Columns>
                        <DataGridTemplateColumn MinWidth="68" MaxWidth="68" SortMemberPath="IsLocal" CanUserReorder="False">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <icons:PackIconOcticons Kind="DeviceDesktop" Height="16" Width="16"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <icons:PackIconOcticons>
                                        <icons:PackIconOcticons.Style>
                                            <Style TargetType="icons:PackIconOcticons">
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                <Setter Property="Width" Value="12"/>
                                                <Setter Property="Kind" Value="None"/>
                                                <Style.Triggers>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <Binding Path="IsLocal"/>
                                                        </DataTrigger.Binding>
                                                        <Setter Property="Kind" Value="Check"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </icons:PackIconOcticons.Style>
                                    </icons:PackIconOcticons>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn MinWidth="68" MaxWidth="68" SortMemberPath="IsRemote" CanUserReorder="False">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <icons:PackIconOcticons Kind="DeviceMobile" Height="16" Width="16"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <icons:PackIconOcticons>
                                        <icons:PackIconOcticons.Style>
                                            <Style TargetType="icons:PackIconOcticons">
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                <Setter Property="Width" Value="12"/>
                                                <Setter Property="Kind" Value="None"/>
                                                <Style.Triggers>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <Binding Path="IsRemote"/>
                                                        </DataTrigger.Binding>
                                                        <Setter Property="Kind" Value="Check" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </icons:PackIconOcticons.Style>
                                    </icons:PackIconOcticons>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn MinWidth="100" Width="*" Header="Title" Binding="{Binding Path=Title}"/>
                        <DataGridTextColumn MinWidth="100" Width="Auto" Header="Author" Binding="{Binding Path=Author}" />
                        <DataGridTextColumn MinWidth="100" Width="Auto" Header="Series" Binding="{Binding Path=Series}" />
                        <DataGridTextColumn MinWidth="90" Width="Auto" Header="Series #" Binding="{Binding Path=SeriesNum, Converter={StaticResource FloatToString}}" />
                        <DataGridTextColumn MinWidth="115" Width="Auto" Header="Publish Date" Binding="{Binding Path=PubDate}" />
                        <DataGridTextColumn MinWidth="110" Width="Auto" Header="Date Added" Binding="{Binding Path=DateAdded}" />
                        <DataGridTextColumn MinWidth="100" Width="Auto" Header="Language" Binding="{Binding Path=Language}" />
                        <DataGridTextColumn MinWidth="100" Width="Auto" Header="ISBN" Binding="{Binding Path=ISBN}" />
                        <DataGridTextColumn MinWidth="100" Width="Auto" Header="Publisher" Binding="{Binding Path=Publisher}" />
                    </DataGrid.Columns>
                </DataGrid>

                <Border Grid.Row="2" Panel.ZIndex="999">
                    <materialDesign:Snackbar HorizontalAlignment="Stretch" MessageQueue="{Binding SnackBarQueue}" FontSize="16"/>
                </Border>

                <Border x:Name="LibraryDropOverlay" Grid.ZIndex="0" Grid.Row="1" Background="{DynamicResource PrimaryHueLightForegroundBrush}">
                    <icons:PackIconOcticons Kind="DiffAdded" Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" Height="128" Width="128" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Border>

            </Grid>
            <materialDesign:DrawerHost.BottomDrawerContent>
                <UserControl Content="{Binding BottomDrawerContent}">
                </UserControl>
            </materialDesign:DrawerHost.BottomDrawerContent>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
